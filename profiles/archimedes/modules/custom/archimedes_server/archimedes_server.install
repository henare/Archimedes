<?php
/**
 * Implementation of hook_install().
 * 
 * Create private and public encryption keys.
 */
function archimedes_server_install() {
  // Don't regenerate keys if the module is re-installed.
  if (variable_get('archimedes_key_private', FALSE)) {
    return;
  }
  // Create and save private key
  $res = openssl_pkey_new();

  // Export private key and store in $privkey.
  openssl_pkey_export($res, $privkey);
  variable_set('archimedes_key_private', $privkey);

  // Get public key.
  $pubkey = openssl_pkey_get_details($res);
  variable_set('archimedes_key_public',  $pubkey['key']);
} // archimedes_server_install()

/**
 * Implementation of hook_requirements().
 */
function archimedes_server_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'install') {
    include_once dirname(__FILE__) . '/archimedes_server.module';
  }

  if (!archimedes_server_check_webkit()) {
    // Required library wasn't found. Show a warning.
    $requirements['archimedes_server']['title'] = $t('Archimedes Server Webkit');
    $requirements['archimedes_server']['value'] = $t('Not found');
    $requirements['archimedes_server']['description'] = $t('The Python Webkit2png plugin is missing. Screenshots of your sites will not be taken. <a href="@download">Download</a> and extract it to a folder called "python-webkit2png" in your <em>archimedes_server</em> module directory.', array(
      '@download' => 'https://github.com/AdamN/python-webkit2png/tarball/master',
    ));
    $requirements['archimedes_server']['severity'] = REQUIREMENT_WARNING;
  }

  return $requirements;
}


/**
 * Implementation of hook_uninstall().
 */
function archimedes_server_uninstall() {
}

/**
 * Update 6000.
 *
 * Migrate archimedes_keys to archimedes_key_*.
 * Migrate archimedes_mail to archimedes_mail_*.
 */
function archimedes_server_update_6000() {
  $ret = array();
  if ( $keys = variable_get('archimedes_keys', FALSE) && !variable_get('archimedes_key_private', FALSE) ) {
    $keys = variable_get('archimedes_keys', array( 'private' => '', 'public' => '' ));
    variable_set('archimedes_key_private', $keys['private']);
    variable_set('archimedes_key_public', $keys['public']);
    variable_del('archimedes_keys');
    $ret[] = array('success' => TRUE, 'query' => 'Migrated Archimedes key variables.');
  }
  if ( variable_get('archimedes_mail', FALSE) && !variable_get('archimedes_mail_server', FALSE) ) {
    $mail = variable_get('archimedes_mail', array('mail_server' => '', 'mail_user' => '', 'mail_password' => '', 'mail_port' => '110'));
    variable_set('archimedes_mail_server',   $mail['server']);
    variable_set('archimedes_mail_user',     $mail['user']);
    variable_set('archimedes_mail_password', $mail['password']);
    variable_set('archimedes_mail_port',     $mail['port']);
    variable_del('archimedes_mail');
    $ret[] = array('success' => TRUE, 'query' => 'Migrated Archimedes mail variables.');    
  }
  return $ret ;
}
